[{"C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\index.js":"1","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\App.js":"2","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Dashboard.js":"3","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Register.js":"4","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Login.js":"5","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Product\\ProductEdit.js":"6","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Product\\ProductAdd.js":"7","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Product\\ProductsList.js":"8","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\User\\UserEdit.js":"9","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\User\\UserAdd.js":"10","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\User\\UserList.js":"11","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Sidebar.js":"12","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\js\\main.js":"13","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Navbar.js":"14","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Footer.js":"15","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\config\\Firebase.js":"16"},{"size":328,"mtime":1657064802421,"results":"17","hashOfConfig":"18"},{"size":1602,"mtime":1659253747331,"results":"19","hashOfConfig":"18"},{"size":12827,"mtime":1659267043576,"results":"20","hashOfConfig":"18"},{"size":3415,"mtime":1659973677696,"results":"21","hashOfConfig":"18"},{"size":3607,"mtime":1660027253999,"results":"22","hashOfConfig":"18"},{"size":7025,"mtime":1659774432810,"results":"23","hashOfConfig":"18"},{"size":8429,"mtime":1659783896673,"results":"24","hashOfConfig":"18"},{"size":6849,"mtime":1659263621761,"results":"25","hashOfConfig":"18"},{"size":11613,"mtime":1659973666100,"results":"26","hashOfConfig":"18"},{"size":11199,"mtime":1659870099112,"results":"27","hashOfConfig":"18"},{"size":6770,"mtime":1659263677891,"results":"28","hashOfConfig":"18"},{"size":4000,"mtime":1659784378687,"results":"29","hashOfConfig":"18"},{"size":2425,"mtime":1652797284000,"results":"30","hashOfConfig":"18"},{"size":6250,"mtime":1659973662138,"results":"31","hashOfConfig":"18"},{"size":1262,"mtime":1659266894473,"results":"32","hashOfConfig":"18"},{"size":649,"mtime":1659865769223,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"xiaytk",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"37"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"37"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"37"},"C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\index.js",[],[],[],"C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\App.js",[],[],"C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Dashboard.js",["96","97"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from \"./Navbar.js\";\nimport Sidebar from './Sidebar.js';\nimport Footer from './Footer.js';\nimport jwt_decode from \"jwt-decode\";\nimport axios from 'axios';\n\n\nconst Dashboard = () => {\n\n    const [ name, setName] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        refreshToken()\n    }, [])\n    \n    const refreshToken = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/token');\n            const decoded = jwt_decode(response.data.accessToken);\n            setName(decoded.name);\n        } catch (error) {\n            if(error.response){\n                navigate('/');\n            }\n        }\n    }\n\n  return (\n        <div id='app'>\n            <Navbar />\n            <Sidebar />\n            <section className=\"section is-title-bar\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                        <ul>\n                            <li>Admin</li>\n                            <li>Dashboard</li>\n                        </ul>\n                        </div>\n                    </div>\n                    {/* <div className=\"level-right\">\n                        <div className=\"level-item\">\n                        <div className=\"buttons is-right\">\n                            <a href=\"https://github.com/vikdiesel/admin-one-bulma-dashboard\" target=\"_blank\" className=\"button is-primary\">\n                                <span className=\"icon\"><i className=\"mdi mdi-github-circle\"></i></span>\n                                <span>GitHub</span>\n                            </a>\n                        </div>\n                        </div>\n                    </div> */}\n                </div>\n            </section>\n            <section className=\"hero is-hero-bar\">\n                <div className=\"hero-body\">\n                    <div className=\"card\">\n                        <div className=\"card-content\">\n                            <div className=\"level-item\">\n                                <h1 className=\"title\">Selamat datang {name}!</h1>\n                            </div>\n                            <div className=\"level-item\">\n                                <h1 className=\"title\">JWT ReactJS & ExpressJS</h1>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/* <section className=\"hero is-hero-bar\">\n                <div className=\"hero-body\">\n                    <div className=\"level\">\n                        <div className=\"level-left\">\n                        <div className=\"level-item\"><h1 className=\"title\">\n                            Dashboard\n                        </h1></div>\n                        </div>\n                        <div className=\"level-right\">\n                            <div className=\"level-item\"></div>\n                        </div>\n                    </div>\n                </div>\n            </section> */}\n            {/* <section className=\"section is-main-section\">\n                <div className=\"tile is-ancestor\">\n                    <div className=\"tile is-parent\">\n                        <div className=\"card tile is-child\">\n                            <header className=\"card-header\">\n                                <p className=\"card-header-title\">\n                                <span className=\"icon\"><i className=\"mdi mdi-account-circle default\"></i></span>\n                                Edit Profile\n                                </p>\n                            </header>\n                            <div className=\"card-content\">\n                                <form>\n                                <div className=\"field is-horizontal\">\n                                    <div className=\"field-label is-normal\"><label className=\"label\">Avatar</label></div>\n                                    <div className=\"field-body\">\n                                    <div className=\"field\">\n                                        <div className=\"field file\">\n                                        <label className=\"upload control\">\n                                            <a className=\"button is-primary\">\n                                            <span className=\"icon\"><i className=\"mdi mdi-upload default\"></i></span>\n                                            <span>Pick a file</span>\n                                            </a>\n                                            <input type=\"file\"></input>\n                                        </label>\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                                <hr></hr>\n                                <div className=\"field is-horizontal\">\n                                    <div className=\"field-label is-normal\">\n                                    <label className=\"label\">Name</label>\n                                    </div>\n                                    <div className=\"field-body\">\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                        <input type=\"text\" autocomplete=\"on\" name=\"name\" value=\"John Doe\" className=\"input\" required></input>\n                                        </div>\n                                        <p className=\"help\">Required. Your name</p>\n                                    </div>\n                                    </div>\n                                </div>\n                                <div className=\"field is-horizontal\">\n                                    <div className=\"field-label is-normal\">\n                                    <label className=\"label\">E-mail</label>\n                                    </div>\n                                    <div className=\"field-body\">\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                        <input type=\"email\" autocomplete=\"on\" name=\"email\" value=\"user@example.com\" className=\"input\" required></input>\n                                        </div>\n                                        <p className=\"help\">Required. Your e-mail</p>\n                                    </div>\n                                    </div>\n                                </div>\n                                <hr></hr>\n                                <div className=\"field is-horizontal\">\n                                    <div className=\"field-label is-normal\"></div>\n                                    <div className=\"field-body\">\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                        <button type=\"submit\" className=\"button is-primary\">\n                                            Submit\n                                        </button>\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"tile is-parent\">\n                        <div className=\"card tile is-child\">\n                        <header className=\"card-header\">\n                            <p className=\"card-header-title\">\n                            <span className=\"icon\"><i className=\"mdi mdi-account default\"></i></span>\n                            Profile\n                            </p>\n                        </header>\n                        <div className=\"card-content\">\n                            <div className=\"is-user-avatar image has-max-width is-aligned-center\">\n                            <img src=\"https://avatars.dicebear.com/v2/initials/john-doe.svg\" alt=\"John Doe\"></img>\n                            </div>\n                            <hr></hr>\n                            <div className=\"field\">\n                            <label className=\"label\">Name</label>\n                            <div className=\"control is-clearfix\">\n                                <input type=\"text\" readonly value=\"John Doe\" className=\"input is-static\"></input>\n                            </div>\n                            </div>\n                            <hr></hr>\n                            <div className=\"field\">\n                            <label className=\"label\">E-mail</label>\n                            <div className=\"control is-clearfix\">\n                                <input type=\"text\" readonly value=\"user@example.com\" className=\"input is-static\"></input>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card\">\n                    <header className=\"card-header\">\n                        <p className=\"card-header-title\">\n                        <span className=\"icon\"><i className=\"mdi mdi-lock default\"></i></span>\n                        Change Password\n                        </p>\n                    </header>\n                    <div className=\"card-content\">\n                        <form>\n                        <div className=\"field is-horizontal\">\n                            <div className=\"field-label is-normal\">\n                            <label className=\"label\">Current password</label>\n                            </div>\n                            <div className=\"field-body\">\n                            <div className=\"field\">\n                                <div className=\"control\">\n                                <input type=\"password\" name=\"password_current\" autocomplete=\"current-password\" className=\"input\" required></input>\n                                </div>\n                                <p className=\"help\">Required. Your current password</p></div>\n                            </div>\n                        </div>\n                        <hr></hr>\n                        <div className=\"field is-horizontal\">\n                            <div className=\"field-label is-normal\">\n                            <label className=\"label\">New password</label>\n                            </div>\n                            <div className=\"field-body\">\n                            <div className=\"field\">\n                                <div className=\"control\">\n                                <input type=\"password\" autocomplete=\"new-password\" name=\"password\" className=\"input\" required></input>\n                                </div>\n                                <p className=\"help\">Required. New password</p>\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"field is-horizontal\">\n                            <div className=\"field-label is-normal\">\n                            <label className=\"label\">Confirm password</label>\n                            </div>\n                            <div className=\"field-body\">\n                            <div className=\"field\">\n                                <div className=\"control\">\n                                <input type=\"password\" autocomplete=\"new-password\" name=\"password_confirmation\" className=\"input\" required></input>\n                                </div>\n                                <p className=\"help\">Required. New password one more time</p>\n                            </div>\n                            </div>\n                        </div>\n                        <hr></hr>\n                        <div className=\"field is-horizontal\">\n                            <div className=\"field-label is-normal\"></div>\n                            <div className=\"field-body\">\n                            <div className=\"field\">\n                                <div className=\"control\">\n                                <button type=\"submit\" className=\"button is-primary\">\n                                    Submit\n                                </button>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n            </section> */}\n            {/* <Footer /> */}\n        </div>\n  )\n}\n\nexport default Dashboard","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Register.js",[],[],[],"C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Login.js",["98"],[],"C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Product\\ProductEdit.js",["99","100","101"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sidebar from '../Sidebar.js';\r\n\r\nconst ProductEdit = () => {\r\n\r\n    const [price, setPrice] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [preview, setPreview] = useState('');\r\n    const [token, setToken] = useState([]);\r\n    const [expire, setExpire] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n        getProductByID();\r\n    }, []);\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const axiosJWT = axios.create()\r\n\r\n    axiosJWT.interceptors.request.use( async(config) => { //untuk melakukan pengecekan sebelum req\r\n        const currentDate = new Date()  // ambil waktu sekarang\r\n        if(expire * 1000 < currentDate.getTime()){ // dikali 1000 karena dalam milisecond \r\n            const response = await axios.get('http://localhost:3001/token'); // jika waktu expire lebih kecil maka panggil API token\r\n            // update token untuk authorization yang di header\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}` //ambil access token baru dari API \r\n            setToken(response.data.accessToken) // set kembali token baru untuk digunakan lagi untuk refreshToken\r\n            const decoded = jwt_decode(response.data.accessToken) // decode token baru\r\n            setExpire(decoded.exp) // perbarui data expire dengan decode token baru\r\n        }\r\n        return config\r\n    }, (error) => {\r\n        return Promise.reject(error) //\r\n    })\r\n\r\n\r\n    const getProductByID = async (e) => {\r\n        const response = await axiosJWT.get(`http://localhost:3001/product/${id}`);\r\n        setTitle(response.data.title);\r\n        setPrice(response.data.price);\r\n        setPreview(response.data.url);\r\n        setFile(response.data.image);\r\n    }\r\n\r\n    const submitProduct = async (e) => {\r\n        e.preventDefault();\r\n        await axiosJWT.patch(`http://localhost:3001/product/edit/${id}`, {\r\n            title: title,\r\n            price: price,\r\n            file: file\r\n        });\r\n        navigate('/product');\r\n    }\r\n\r\n    const backClick = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <Navbar />\r\n            <Sidebar />\r\n            <section className=\"section is-title-bar\">\r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                        <ul>\r\n                            <li>Admin</li>\r\n                            <li>Product</li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                        <div className=\"buttons is-right\">\r\n                            <button onClick={backClick} className=\"button is-danger\">\r\n                                <span className=\"icon\"><i className=\"mdi mdi-arrow-left\"></i></span>\r\n                                <span>Kembali</span>\r\n                            </button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <header className=\"card-header\">\r\n                        <p className=\"card-header-title\">\r\n                        <span className=\"icon\"><i className=\"mdi mdi-book-information-variant default\"></i></span>\r\n                        Form Ubah Product\r\n                        </p>\r\n                    </header>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={submitProduct}>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\">\r\n                            <label className=\"label\">Title</label>\r\n                            </div>\r\n                            <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                <input type=\"text\" className=\"input\" value={title} placeholder=\"Title\" onChange={ (e) => setTitle(e.target.value) } required></input>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\">\r\n                            <label className=\"label\">Price</label>\r\n                            </div>\r\n                            <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                <input type=\"text\" name=\"password\" className=\"input\" value={price} placeholder=\"Price\" onChange={ (e) => setPrice(e.target.value) } required></input>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column is-one-fifth\">\r\n                            {preview ? (\r\n                                <figure className=\"image is-square\">\r\n                                    <img src={preview} alt=\"Preview Image\"/>\r\n                                </figure>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\"></div>\r\n                            <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                <button type=\"submit\" className=\"button is-primary\">\r\n                                    Submit\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEdit;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Product\\ProductAdd.js",["102","103","104","105","106"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sidebar from '../Sidebar.js';\r\n\r\nconst ProductAdd = () => {\r\n\r\n    const [price, setPrice] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [preview, setPreview] = useState('');\r\n    const [token, setToken] = useState([]);\r\n    const [expire, setExpire] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n    }, []);\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const axiosJWT = axios.create()\r\n\r\n    axiosJWT.interceptors.request.use( async(config) => { //untuk melakukan pengecekan sebelum req\r\n        const currentDate = new Date()  // ambil waktu sekarang\r\n        if(expire * 1000 < currentDate.getTime()){ // dikali 1000 karena dalam milisecond \r\n            const response = await axios.get('http://localhost:3001/token') // jika waktu expire lebih kecil maka panggil API token\r\n            // update token untuk authorization yang di header\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}` //ambil access token baru dari API \r\n            setToken(response.data.accessToken) // set kembali token baru untuk digunakan lagi untuk refreshToken\r\n            const decoded = jwt_decode(response.data.accessToken) // decode token baru\r\n            setExpire(decoded.exp) // perbarui data expire dengan decode token baru\r\n        }\r\n        return config\r\n    }, (error) => {\r\n        return Promise.reject(error) //\r\n    })\r\n\r\n    const submitProduct = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"title\", title);\r\n        formData.append(\"price\", price);\r\n        formData.append(\"file\", file);\r\n        await axios.post('http://localhost:3001/product/add', formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n        navigate('/product');\r\n    }\r\n\r\n    const loadImage = (e) => {\r\n        const image = e.target.files[0];\r\n\r\n        setFile(image);\r\n        setPreview(URL.createObjectURL(image));\r\n    }\r\n\r\n    const backClick = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <Navbar />\r\n            <Sidebar />\r\n            <section className=\"section is-title-bar\">\r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                        <ul>\r\n                            <li>Admin</li>\r\n                            <li>Product</li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                        <div className=\"buttons is-right\">\r\n                            <button onClick={backClick} className=\"button is-danger\">\r\n                                <span className=\"icon\"><i className=\"mdi mdi-arrow-left\"></i></span>\r\n                                <span>Kembali</span>\r\n                            </button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <header className=\"card-header\">\r\n                        <p className=\"card-header-title\">\r\n                        <span className=\"icon\"><i className=\"mdi mdi-book-information-variant default\"></i></span>\r\n                        Form Tambah Product\r\n                        </p>\r\n                    </header>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={submitProduct}>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\">\r\n                            <label className=\"label\">Title</label>\r\n                            </div>\r\n                            <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                <input type=\"text\" className=\"input\" value={title} placeholder=\"Title\" onChange={ (e) => setTitle(e.target.value) } required></input>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\">\r\n                            <label className=\"label\">Price</label>\r\n                            </div>\r\n                            <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                <input type=\"text\" name=\"password\" className=\"input\" value={price} placeholder=\"Price\" onChange={ (e) => setPrice(e.target.value) } required></input>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\"><label className=\"label\">Image</label></div>\r\n                            <div className=\"field-body\">\r\n                                <div className=\"field\">\r\n                                    <div className=\"field file\">\r\n                                        <label className=\"upload control\">\r\n                                            <a className=\"button is-primary\">\r\n                                                <span className=\"icon\"><i className=\"mdi mdi-upload\"></i></span>\r\n                                                <span>Pick a file</span>\r\n                                            </a>\r\n                                            <input className=\"file-input\" onChange={loadImage} type=\"file\"></input>\r\n                                        </label>\r\n                                    </div>\r\n                                    <p className=\"help is-danger\">\r\n                                        \"The image must be less than 10 MB and .png, .jpg, jpeg\"\r\n                                    </p>\r\n                                    <br/>\r\n                                    <div className=\"column is-one-fifth\">\r\n                                        {preview ? (\r\n                                            <figure className=\"image is-square\">\r\n                                                <img src={preview} alt=\"Preview Image\"/>\r\n                                            </figure>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label is-normal\"></div>\r\n                            <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                <button type=\"submit\" className=\"button is-primary\">\r\n                                    Submit\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductAdd;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Product\\ProductsList.js",["107"],[],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sidebar from '../Sidebar.js';\r\n\r\nconst ProductsList = () => {\r\n\r\n    const [products, setProduct] = useState([]);\r\n    const [token, setToken] = useState([]);\r\n    const [expire, setExpire] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n        getProducts();\r\n    }, []);\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const axiosJWT = axios.create()\r\n\r\n    axiosJWT.interceptors.request.use( async(config) => { //untuk melakukan pengecekan sebelum req\r\n        const currentDate = new Date()  // ambil waktu sekarang\r\n        if(expire * 1000 < currentDate.getTime()){ // dikali 1000 karena dalam milisecond \r\n            const response = await axios.get('http://localhost:3001/token') // jika waktu expire lebih kecil maka panggil API token\r\n            // update token untuk authorization yang di header\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}` //ambil access token baru dari API \r\n            setToken(response.data.accessToken) // set kembali token baru untuk digunakan lagi untuk refreshToken\r\n            const decoded = jwt_decode(response.data.accessToken) // decode token baru\r\n            setExpire(decoded.exp) // perbarui data expire dengan decode token baru\r\n        }\r\n        return config\r\n    }, (error) => {\r\n        return Promise.reject(error) //\r\n    })\r\n\r\n    const getProducts = async () => {\r\n        const response = await axiosJWT.get('http://localhost:3001/product', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        setProduct(response.data);\r\n    }\r\n\r\n    const deleteProduct = async (id) => {\r\n        await axiosJWT.delete('http://localhost:3001/product/delete/' + id, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        getProducts();\r\n    }\r\n\r\n    return (\r\n        <div id='app'>\r\n            <Navbar />\r\n            <Sidebar />\r\n            <section className=\"section is-title-bar\">\r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                        <ul>\r\n                            <li>Admin</li>\r\n                            <li>Product</li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                        <div className=\"buttons is-right\">\r\n                            <Link to=\"/product/add\" className=\"button is-primary\">\r\n                                <span className=\"icon\"><i className=\"mdi mdi-plus-circle\"></i></span>\r\n                                <span>Add Product</span>\r\n                            </Link>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"hero is-hero-bar\">\r\n                <div className=\"hero-body\">\r\n                    <div className=\"level\">\r\n                        <div className=\"level-left\">\r\n                        <div className=\"level-item\"><h1 className=\"title\">\r\n                            Product List\r\n                        </h1></div>\r\n                        </div>\r\n                        <div className=\"level-right\">\r\n                            <div className=\"level-item\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section is-main-section\">\r\n                <div className=\"card\">\r\n                    <header className=\"card-header\">\r\n                        <p className=\"card-header-title\">\r\n                            <span className=\"icon\"><i className=\"mdi mdi-table default\"></i></span>\r\n                            Products\r\n                        </p>\r\n                    </header>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"field is-horizontal\">\r\n                            <table className=\"table is-striped is-fullwidth\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Title</th>\r\n                                        <th>Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    { products.map((product, index) => (\r\n                                    <tr key={ product.id }>\r\n                                        <td>{ index + 1 }</td>\r\n                                        <td>{ product.title }</td>\r\n                                        <td>{ product.price }</td>\r\n                                        <td className=\"is-actions-cell\">\r\n                                            <div className=\"buttons\">\r\n                                                <Link to={'/product/edit/' + product.id} className=\"button is-small is-primary\" type=\"button\">\r\n                                                    <span className=\"icon\"><i className=\"mdi mdi-eye\"></i></span>\r\n                                                </Link>\r\n                                                <button onClick={() => deleteProduct(product.id)} className=\"button is-small is-danger jb-modal\" data-target=\"sample-modal\" type=\"button\">\r\n                                                    <span className=\"icon\"><i className=\"mdi mdi-trash-can\"></i></span>\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    )) }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <hr></hr>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsList;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\User\\UserEdit.js",["108","109","110","111"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sidebar from '../Sidebar.js';\r\n\r\nconst UserEdit = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [preview, setPreview] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [token, setToken] = useState([]);\r\n    const [expire, setExpire] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n        getUserByID();\r\n    }, []);\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const axiosJWT = axios.create()\r\n\r\n    axiosJWT.interceptors.request.use(async (config) => {\r\n        const currentDate = new Date();\r\n        if (expire * 1000 < currentDate.getTime()) {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        }\r\n        return config;\r\n    }, (error) => {\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    const getUserByID = async () => {\r\n        const response = await axiosJWT.get('http://localhost:3001/user/' + id);\r\n        setName(response.data.name);\r\n        setEmail(response.data.email);\r\n        setRole(response.data.role);\r\n        setFile(response.data.image);\r\n        setPreview(response.data.url);\r\n    }\r\n\r\n    const submitUser = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"password\", password);\r\n        formData.append(\"file\", file);\r\n        formData.append(\"role\", role);\r\n        await axios.patch('http://localhost:3001/user/edit/' + id, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n        navigate('/user');\r\n    }\r\n\r\n    const backClick = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    const loadImage = (e) => {\r\n        const image = e.target.files[0];\r\n\r\n        setFile(image);\r\n        setPreview(URL.createObjectURL(image));\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <Navbar />\r\n            <Sidebar />\r\n            <section className=\"section is-title-bar\">\r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                            <ul>\r\n                                <li>Admin</li>\r\n                                <li>Product</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                            <div className=\"buttons is-right\">\r\n                                <button onClick={backClick} className=\"button is-danger\">\r\n                                    <span className=\"icon\"><i className=\"mdi mdi-arrow-left\"></i></span>\r\n                                    <span>Kembali</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <header className=\"card-header\">\r\n                        <p className=\"card-header-title\">\r\n                            <span className=\"icon\"><i className=\"mdi mdi-book-information-variant default\"></i></span>\r\n                            Form Ubah User\r\n                        </p>\r\n                    </header>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={submitUser}>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\">\r\n                                    <label className=\"label\">Name</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                        <input className=\"input\" type=\"text\" placeholder=\"Name\" value={name} onChange={ (e) => setName(e.target.value) }></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                        <input className=\"input\" type=\"email\" placeholder=\"Email\" value={email} onChange={ (e) => setEmail(e.target.value) }></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                        <input className=\"input\" type=\"text\" placeholder=\"Password\" onChange={ (e) => setPassword(e.target.value) } required/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field has-check is-horizontal\">\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Role</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                    <div className=\"field is-grouped-multiline is-grouped\">\r\n                                        <div className=\"control\">\r\n                                            <label className=\"b-radio radio\">\r\n                                                <input type=\"radio\" name=\"sample-radio\" value=\"Admin\" onChange={ (e) => setRole(e.target.value)} checked={role === 'Admin' ? true : false}/>\r\n                                                <span className=\"check\"></span>\r\n                                                <span className=\"control-label\">Admin</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"control\">\r\n                                            <label className=\"b-radio radio\">\r\n                                                <input type=\"radio\" name=\"sample-radio\" value=\"User\" onChange={ (e) => setRole(e.target.value) } checked={role === 'User' ? true : false}/>\r\n                                                <span className=\"check\"></span>\r\n                                                <span className=\"control-label\">User</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\"><label className=\"label\">Image</label></div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"field file\">\r\n                                            <label className=\"upload control\">\r\n                                                <a className=\"button is-primary\">\r\n                                                    <span className=\"icon\"><i className=\"mdi mdi-upload\"></i></span>\r\n                                                    <span>Pick a file</span>\r\n                                                </a>\r\n                                                <input className=\"file-input\" onChange={loadImage} type=\"file\"></input>\r\n                                            </label>\r\n                                        </div>\r\n                                        <p className=\"help is-danger\">\r\n                                            \"The image must be less than 10 MB and .png, .jpg, jpeg\"\r\n                                        </p>\r\n                                        <br/>\r\n                                        <div className=\"column is-one-fifth\">\r\n                                            {preview ? (\r\n                                                <figure className=\"image is-square\">\r\n                                                    <img className=\"is-rounded\" src={preview} alt=\"Preview Image\"/>\r\n                                                </figure>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\"></div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                            <button type=\"submit\" className=\"button is-primary\">\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEdit;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\User\\UserAdd.js",["112","113","114"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sidebar from '../Sidebar.js';\r\n\r\nconst UserAdd = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [preview, setPreview] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [token, setToken] = useState('');\r\n    const [expire, setExpire] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n    });\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const axiosJWT = axios.create()\r\n\r\n    axiosJWT.interceptors.request.use(async (config) => {\r\n        const currentData = new Date();\r\n        if (expire * 1000 < currentData.getTime()) {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        }\r\n        return config;\r\n    }, (error) => {\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    const submitUser = async (e) => {\r\n        e.preventDefault();\r\n        if(file === null) {\r\n            setFile(null);\r\n        }\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"password\", password);\r\n        formData.append(\"role\", role);\r\n        formData.append(\"file\", file);\r\n        await axios.post('http://localhost:3001/user/add', formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n        navigate('/user');\r\n    }\r\n\r\n    const backClick = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    const loadImage = (e) => {\r\n        const image = e.target.files[0];\r\n\r\n        setFile(image);\r\n        setPreview(URL.createObjectURL(image));\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <Navbar />\r\n            <Sidebar />\r\n            <section className=\"section is-title-bar\">\r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                            <ul>\r\n                                <li>Admin</li>\r\n                                <li>Product</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                            <div className=\"buttons is-right\">\r\n                                <button onClick={backClick} className=\"button is-danger\">\r\n                                    <span className=\"icon\"><i className=\"mdi mdi-arrow-left\"></i></span>\r\n                                    <span>Kembali</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <header className=\"card-header\">\r\n                        <p className=\"card-header-title\">\r\n                            <span className=\"icon\"><i className=\"mdi mdi-book-information-variant default\"></i></span>\r\n                            Form Tambah User\r\n                        </p>\r\n                    </header>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={submitUser}>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\">\r\n                                    <label className=\"label\">Name</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                        <input className=\"input\" type=\"text\" placeholder=\"Name\" value={name} onChange={ (e) => setName(e.target.value) }></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\">\r\n                                    <label className=\"label\">Email</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                        <input className=\"input\" type=\"email\" placeholder=\"Email\" value={email} onChange={ (e) => setEmail(e.target.value) }></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\">\r\n                                    <label className=\"label\">Password</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                        <input className=\"input\" type=\"text\" placeholder=\"Password\" onChange={ (e) => setPassword(e.target.value) }></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field has-check is-horizontal\">\r\n                                <div className=\"field-label\">\r\n                                    <label className=\"label\">Role</label>\r\n                                </div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                    <div className=\"field is-grouped-multiline is-grouped\">\r\n                                        <div className=\"control\">\r\n                                            <label className=\"b-radio radio\">\r\n                                                <input type=\"radio\" name=\"sample-radio\" value=\"Admin\" onChange={ (e) => setRole(e.target.value) }></input>\r\n                                                <span className=\"check\"></span>\r\n                                                <span className=\"control-label\">Admin</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"control\">\r\n                                            <label className=\"b-radio radio\">\r\n                                                <input type=\"radio\" name=\"sample-radio\" value=\"User\" onChange={ (e) => setRole(e.target.value) }/>\r\n                                                <span className=\"check\"></span>\r\n                                                <span className=\"control-label\">User</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\"><label className=\"label\">Image</label></div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"field file\">\r\n                                            <label className=\"upload control\">\r\n                                                <a className=\"button is-primary\">\r\n                                                    <span className=\"icon\"><i className=\"mdi mdi-upload\"></i></span>\r\n                                                    <span>Pick a file</span>\r\n                                                </a>\r\n                                                <input className=\"file-input\" onChange={loadImage} type=\"file\"></input>\r\n                                            </label>\r\n                                        </div>\r\n                                        <p className=\"help is-danger\">\r\n                                            \"The image must be less than 10 MB and .png, .jpg, jpeg\"\r\n                                        </p>\r\n                                        <br/>\r\n                                        <div className=\"column is-one-fifth\">\r\n                                            {preview ? (\r\n                                                <figure className=\"image is-square\">\r\n                                                    <img className=\"is-rounded\" src={preview} alt=\"Preview Image\"/>\r\n                                                </figure>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"field is-horizontal\">\r\n                                <div className=\"field-label is-normal\"></div>\r\n                                <div className=\"field-body\">\r\n                                    <div className=\"field\">\r\n                                        <div className=\"control\">\r\n                                            <button type=\"submit\" className=\"button is-primary\">\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAdd;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\User\\UserList.js",["115"],[],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sidebar from '../Sidebar.js';\r\n\r\nconst UserList = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [token, setToken] = useState([]);\r\n    const [expire, setExpire] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n        getUsers();\r\n    }, []);\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const axiosJWT = axios.create()\r\n\r\n    axiosJWT.interceptors.request.use( async(config) => { //untuk melakukan pengecekan sebelum req\r\n        const currentDate = new Date()  // ambil waktu sekarang\r\n        if(expire * 1000 < currentDate.getTime()){ // dikali 1000 karena dalam milisecond \r\n            const response = await axios.get('http://localhost:3001/token') // jika waktu expire lebih kecil maka panggil API token\r\n            // update token untuk authorization yang di header\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}` //ambil access token baru dari API \r\n            setToken(response.data.accessToken) // set kembali token baru untuk digunakan lagi untuk refreshToken\r\n            const decoded = jwt_decode(response.data.accessToken) // decode token baru\r\n            setExpire(decoded.exp) // perbarui data expire dengan decode token baru\r\n        }\r\n        return config\r\n    }, (error) => {\r\n        return Promise.reject(error) //\r\n    })\r\n\r\n    const getUsers = async () => {\r\n        const response = await axiosJWT.get('http://localhost:3001/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        setUsers(response.data);\r\n    }\r\n\r\n    const deleteUser = async (id) => {\r\n        await axiosJWT.delete('http://localhost:3001/user/delete/' + id, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        getUsers();\r\n    }\r\n\r\n    return (\r\n\r\n        <div id='app'>\r\n            <Navbar />\r\n            <Sidebar />\r\n            <section className=\"section is-title-bar\">\r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                        <ul>\r\n                            <li>Admin</li>\r\n                            <li>User</li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                        <div className=\"buttons is-right\">\r\n                            <Link to=\"/user/add\" className=\"button is-primary\">\r\n                                <span className=\"icon\"><i className=\"mdi mdi-account\"></i></span>\r\n                                <span>Add User</span>\r\n                            </Link>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"hero is-hero-bar\">\r\n                <div className=\"hero-body\">\r\n                    <div className=\"level\">\r\n                        <div className=\"level-left\">\r\n                        <div className=\"level-item\"><h1 className=\"title\">\r\n                            User List\r\n                        </h1></div>\r\n                        </div>\r\n                        <div className=\"level-right\">\r\n                            <div className=\"level-item\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section is-main-section\">\r\n                <div className=\"card\">\r\n                    <header className=\"card-header\">\r\n                        <p className=\"card-header-title\">\r\n                            <span className=\"icon\"><i className=\"mdi mdi-account default\"></i></span>\r\n                            Users\r\n                        </p>\r\n                    </header>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"field is-horizontal\">\r\n                            <table className=\"table is-striped is-fullwidth\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    { users.map((user, index) => (\r\n                                    <tr key={ user.id }>\r\n                                        <td>{ index + 1 }</td>\r\n                                        <td>{ user.name }</td>\r\n                                        <td>{ user.email }</td>\r\n                                        <td className=\"is-actions-cell\">\r\n                                            <div className=\"buttons\">\r\n                                                <Link to={'/user/edit/' + user.id} className=\"button is-small is-primary\" type=\"button\">\r\n                                                    <span className=\"icon\"><i className=\"mdi mdi-eye\"></i></span>\r\n                                                </Link>\r\n                                                <button onClick={() => deleteUser(user.id)} className=\"button is-small is-danger jb-modal\" data-target=\"sample-modal\" type=\"button\">\r\n                                                    <span className=\"icon\"><i className=\"mdi mdi-trash-can\"></i></span>\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    )) }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <hr></hr>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Sidebar.js",["116","117"],[],"import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nconst Sidebar = () => {\r\n  const navigate = useNavigate();\r\n  const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    Me();\r\n  }, [])\r\n\r\n  const Me = async (req, res) => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3001/me');\r\n        setRole(response.data.role);\r\n    } catch (error) {\r\n        \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <aside className=\"aside is-placed-left is-expanded\">\r\n            <div className=\"aside-tools\">\r\n            <div className=\"aside-tools-label\">\r\n                <span><b>JWT</b> ReactJS & ExpressJS</span>\r\n            </div>\r\n            </div>\r\n            <div className=\"menu is-menu-main\">\r\n            <p className=\"menu-label\">General</p>\r\n            <ul className=\"menu-list\">\r\n                <li>\r\n                <NavLink to=\"/dashboard\" className={({isActive}) => isActive ? 'has-icon is-active' : 'has-icon'}>\r\n                    <span className=\"icon\"><i className=\"mdi mdi-desktop-mac\"></i></span>\r\n                    <span className=\"menu-item-label\">Dashboard</span>\r\n                </NavLink>\r\n                </li>\r\n            </ul>\r\n            <p className=\"menu-label\">Feature</p>\r\n            <ul className=\"menu-list\">\r\n                <li>\r\n                    {role == \"Admin\" ?                     \r\n                    <NavLink to=\"/user\" className={({isActive}) => isActive ? 'has-icon is-active' : 'has-icon'}>\r\n                        <span className=\"icon has-update-mark\"><i className=\"mdi mdi-table\"></i></span>\r\n                        <span className=\"menu-item-label\">Users</span>\r\n                    </NavLink> : \"\"}\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/product\" className={({isActive}) => isActive ? 'has-icon is-active' : 'has-icon'}>\r\n                        <span className=\"icon\"><i className=\"mdi mdi-square-edit-outline\"></i></span>\r\n                        <span className=\"menu-item-label\">Product</span>\r\n                    </NavLink>\r\n                </li>\r\n                {/* <li>\r\n                    <a className=\"has-icon has-dropdown-icon\">\r\n                        <span className=\"icon\"><i className=\"mdi mdi-view-list\"></i></span>\r\n                        <span className=\"menu-item-label\">Submenus</span>\r\n                        <div className=\"dropdown-icon\">\r\n                        <span className=\"icon\"><i className=\"mdi mdi-plus\"></i></span>\r\n                        </div>\r\n                    </a>\r\n                    <ul>\r\n                        <li>\r\n                        <a href=\"#void\">\r\n                            <span>Sub-item One</span>\r\n                        </a>\r\n                        </li>\r\n                        <li>\r\n                        <a href=\"#void\">\r\n                            <span>Sub-item Two</span>\r\n                        </a>\r\n                        </li>\r\n                    </ul>\r\n                </li> */}\r\n            </ul>\r\n            {/* <p className=\"menu-label\">About</p>\r\n            <ul className=\"menu-list\">\r\n                <li>\r\n                <a href=\"https://github.com/vikdiesel/admin-one-bulma-dashboard\" target=\"_blank\" className=\"has-icon\">\r\n                    <span className=\"icon\"><i className=\"mdi mdi-github-circle\"></i></span>\r\n                    <span className=\"menu-item-label\">GitHub</span>\r\n                </a>\r\n                </li>\r\n                <li>\r\n                <a href=\"https://justboil.me/bulma-admin-template/free-html-dashboard/\" className=\"has-icon\">\r\n                    <span className=\"icon\"><i className=\"mdi mdi-help-circle\"></i></span>\r\n                    <span className=\"menu-item-label\">About</span>\r\n                </a>\r\n                </li>\r\n            </ul> */}\r\n            </div>\r\n        </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\js\\main.js",["118"],[],"\"use strict\";\n\n/* Aside: submenus toggle */\nArray.from(document.getElementsByClassName('menu is-menu-main')).forEach(function (el) {\n  Array.from(el.getElementsByClassName('has-dropdown-icon')).forEach(function (elA) {\n    elA.addEventListener('click', function (e) {\n      var dropdownIcon = e.currentTarget.getElementsByClassName('dropdown-icon')[0].getElementsByClassName('mdi')[0];\n      e.currentTarget.parentNode.classList.toggle('is-active');\n      dropdownIcon.classList.toggle('mdi-plus');\n      dropdownIcon.classList.toggle('mdi-minus');\n    });\n  });\n});\n/* Aside Mobile toggle */\n\nArray.from(document.getElementsByClassName('jb-aside-mobile-toggle')).forEach(function (el) {\n  el.addEventListener('click', function (e) {\n    var dropdownIcon = e.currentTarget.getElementsByClassName('icon')[0].getElementsByClassName('mdi')[0];\n    document.documentElement.classList.toggle('has-aside-mobile-expanded');\n    dropdownIcon.classList.toggle('mdi-forwardburger');\n    dropdownIcon.classList.toggle('mdi-backburger');\n  });\n});\n/* NavBar menu mobile toggle */\n\nArray.from(document.getElementsByClassName('jb-navbar-menu-toggle')).forEach(function (el) {\n  el.addEventListener('click', function (e) {\n    var dropdownIcon = e.currentTarget.getElementsByClassName('icon')[0].getElementsByClassName('mdi')[0];\n    document.getElementById(e.currentTarget.getAttribute('data-target')).classList.toggle('is-active');\n    dropdownIcon.classList.toggle('mdi-dots-vertical');\n    dropdownIcon.classList.toggle('mdi-close');\n  });\n});\n/* Modal: open */\n\nArray.from(document.getElementsByClassName('jb-modal')).forEach(function (el) {\n  el.addEventListener('click', function (e) {\n    var modalTarget = e.currentTarget.getAttribute('data-target');\n    document.getElementById(modalTarget).classList.add('is-active');\n    document.documentElement.classList.add('is-clipped');\n  });\n});\n/* Modal: close */\n\nArray.from(document.getElementsByClassName('jb-modal-close')).forEach(function (el) {\n  el.addEventListener('click', function (e) {\n    e.currentTarget.closest('.modal').classList.remove('is-active');\n    document.documentElement.classList.remove('is-clipped');\n  });\n});\n/* Notification dismiss */\n\nArray.from(document.getElementsByClassName('jb-notification-dismiss')).forEach(function (el) {\n  el.addEventListener('click', function (e) {\n    e.currentTarget.closest('.notification').classList.add('is-hidden');\n  });\n});","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Navbar.js",["119","120","121","122","123","124"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport axios from 'axios';\n\nconst Navbar = () => {\n\n  \n  const [ name, setName] = useState('');\n  const [ preview, setPreview] = useState('');\n  const [ expire, setExpire] = useState([]);\n  const [ token, setToken] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n      refreshToken();\n      Me();\n  }, [])\n  \n  const refreshToken = async () => {\n      try {\n          const response = await axios.get('http://localhost:3001/token');\n          setToken(response.data.accessToken)\n          const decoded = jwt_decode(response.data.accessToken);\n          setExpire(decoded.exp);\n      } catch (error) {\n          if(error.response){\n              navigate('/');\n          }\n      }\n  }\n\n  const Me = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/me');\n      setPreview(response.data.url);\n      setName(response.data.name)\n    } catch (error) {\n      if(error.response){\n        navigate('/');\n      }\n    }\n  }\n\n  const axiosJWT = axios.create();\n\n  axiosJWT.interceptors.request.use( async(config) => {\n      const currentDate = new Date();\n      if(expire * 1000 < currentDate.getTime()){\n          const response = await axios.get('http://localhost:3001/token');\n          config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n          setToken(response.data.accessToken);\n          const decoded = jwt_decode(response.data.accessToken);\n          setName(decoded.name);\n          setExpire(decoded.exp);\n      }\n      return config;\n  }, (error) => {\n      return Promise.reject(error) //\n  });\n\n  const Logout = async () => {\n    try {\n        await axios.delete('http://localhost:3001/logout');\n        navigate('/');\n    } catch (error) {\n        console.info(error);\n    }\n  }\n\n  return (\n    <nav id=\"navbar-main\" className=\"navbar is-fixed-top\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item is-hidden-desktop jb-aside-mobile-toggle\">\n            <span className=\"icon\"><i className=\"mdi mdi-forwardburger mdi-24px\"></i></span>\n        </a>\n        {/* <div className=\"navbar-item has-control\">\n            <div className=\"control\"><input placeholder=\"Search everywhere...\" className=\"input\"></input></div>\n        </div> */}\n      </div>\n      <div className=\"navbar-brand is-right\">\n      <a className=\"navbar-item is-hidden-desktop jb-navbar-menu-toggle\" data-target=\"navbar-menu\">\n          <span className=\"icon\"><i className=\"mdi mdi-dots-vertical\"></i></span>\n      </a>\n      </div>\n      <div className=\"navbar-menu fadeIn animated faster\" id=\"navbar-menu\">\n        <div className=\"navbar-end\">\n          {/* <div className=\"navbar-item has-dropdown has-dropdown-with-icons has-divider is-hoverable\">\n            <a className=\"navbar-link is-arrowless\">\n                <span className=\"icon\">\n                <i className=\"mdi mdi-menu\"></i>\n                </span>\n                <span>Sample Menu</span>\n                <span className=\"icon\">\n                <i className=\"mdi mdi-chevron-down\"></i>\n                </span>\n            </a>\n            <div className=\"navbar-dropdown\">\n                <a href=\"profile.html\" className=\"navbar-item is-active\">\n                  <span className=\"icon\"><i className=\"mdi mdi-account\"></i></span>\n                  <span>My Profile</span>\n                </a>\n                <a className=\"navbar-item\">\n                  <span className=\"icon\"><i className=\"mdi mdi-settings\"></i></span>\n                  <span>Settings</span>\n                </a>\n                <a className=\"navbar-item\">\n                  <span className=\"icon\"><i className=\"mdi mdi-email\"></i></span>\n                  <span>Messages</span>\n                </a>\n                <hr className=\"navbar-divider\"></hr>\n                <a className=\"navbar-item\">\n                  <span className=\"icon\"><i className=\"mdi mdi-logout\"></i></span>\n                  <span>Log Out</span>\n                </a>\n            </div>\n          </div> */}\n          <div className=\"navbar-item has-dropdown has-dropdown-with-icons has-divider has-user-avatar is-hoverable\">\n            <a className=\"navbar-link is-arrowless\">\n                <div className=\"is-user-avatar\">\n                <img src={preview !== null ? preview : \"http://localhost:3000/images/user/user.png\"} alt={name.toUpperCase()}></img>\n                </div>\n                <div className=\"is-user-name\">\n                <span>{name.toUpperCase()}</span>\n                </div>\n                <span className=\"icon\"><i className=\"mdi mdi-chevron-down\"></i></span>\n            </a>\n            <div className=\"navbar-dropdown\">\n                {/* <a href=\"profile.html\" className=\"navbar-item is-active\">\n                  <span className=\"icon\"><i className=\"mdi mdi-account\"></i></span>\n                  <span>My Profile</span>\n                </a>\n                <a className=\"navbar-item\">\n                  <span className=\"icon\"><i className=\"mdi mdi-settings\"></i></span>\n                  <span>Settings</span>\n                </a>\n                <a className=\"navbar-item\">\n                  <span className=\"icon\"><i className=\"mdi mdi-email\"></i></span>\n                  <span>Messages</span>\n                </a>\n                <hr className=\"navbar-divider\"></hr> */}\n                <a onClick={Logout} className=\"navbar-item is-danger\">\n                  <span className=\"icon\"><i className=\"mdi mdi-logout\"></i></span>\n                  <span>Log Out</span>\n                </a>\n          </div>\n          </div>\n          {/* <a href=\"https://justboil.me/bulma-admin-template/free-html-dashboard/\" title=\"About\" className=\"navbar-item has-divider is-desktop-icon-only\">\n            <span className=\"icon\"><i className=\"mdi mdi-help-circle-outline\"></i></span>\n            <span>About</span>\n          </a>\n          <a title=\"Log out\" className=\"navbar-item is-desktop-icon-only\">\n            <span className=\"icon\"><i className=\"mdi mdi-logout\"></i></span>\n            <span>Log out</span>\n          </a> */}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\components\\Footer.js",["125","126"],[],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"level\">\r\n                    <dia className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                            © 2020, JustBoil.me\r\n                        </div>\r\n                        <div className=\"level-item\">\r\n                            <a href=\"https://github.com/vikdiesel/admin-one-bulma-dashboard\" style=\"height: 20px\">\r\n                                <img src=\"https://img.shields.io/github/v/release/vikdiesel/admin-one-bulma-dashboard?color=%23999\"></img>\r\n                            </a>\r\n                        </div>\r\n                    </dia>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                            <div className=\"logo\">\r\n                                <a href=\"https://justboil.me\"><img src=\"img/justboil-logo.svg\" alt=\"JustBoil.me\"></img></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer;","C:\\xampp\\htdocs\\JWT - Auth\\frontend\\src\\config\\Firebase.js",["127"],[],"import { initializeApp } from \"firebase/app\";\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCLKtPJwxh1HTaW2F4a_80SXAXO7efsito\",\r\n    authDomain: \"projectauth-ba14d.firebaseapp.com\",\r\n    projectId: \"projectauth-ba14d\",\r\n    storageBucket: \"projectauth-ba14d.appspot.com\",\r\n    messagingSenderId: \"594693942203\",\r\n    appId: \"1:594693942203:web:5ce38ca503b374f5b0b29e\"\r\n  };\r\n\r\n  \r\n  // Initialize Firebase\r\n  const app = initializeApp(firebaseConfig);\r\n  export const googleProvider = new GoogleAuthProvider();",{"ruleId":"128","severity":1,"message":"129","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":17,"column":8,"nodeType":"134","endLine":17,"endColumn":10,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":4,"column":36,"nodeType":"130","messageId":"131","endLine":4,"endColumn":54},{"ruleId":"128","severity":1,"message":"137","line":14,"column":12,"nodeType":"130","messageId":"131","endLine":14,"endColumn":17},{"ruleId":"132","severity":1,"message":"138","line":22,"column":8,"nodeType":"134","endLine":22,"endColumn":10,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":138,"column":37,"nodeType":"142","endLine":138,"endColumn":77},{"ruleId":"128","severity":1,"message":"143","line":3,"column":23,"nodeType":"130","messageId":"131","endLine":3,"endColumn":27},{"ruleId":"128","severity":1,"message":"137","line":14,"column":12,"nodeType":"130","messageId":"131","endLine":14,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":20,"column":8,"nodeType":"134","endLine":20,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":141,"column":45,"nodeType":"142","endLine":141,"endColumn":78},{"ruleId":"140","severity":1,"message":"141","line":155,"column":49,"nodeType":"142","endLine":155,"endColumn":89},{"ruleId":"132","severity":1,"message":"147","line":18,"column":8,"nodeType":"134","endLine":18,"endColumn":10,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"137","line":16,"column":12,"nodeType":"130","messageId":"131","endLine":16,"endColumn":17},{"ruleId":"132","severity":1,"message":"149","line":24,"column":8,"nodeType":"134","endLine":24,"endColumn":10,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"146","line":192,"column":49,"nodeType":"142","endLine":192,"endColumn":82},{"ruleId":"140","severity":1,"message":"141","line":206,"column":53,"nodeType":"142","endLine":206,"endColumn":116},{"ruleId":"128","severity":1,"message":"137","line":16,"column":12,"nodeType":"130","messageId":"131","endLine":16,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":184,"column":49,"nodeType":"142","endLine":184,"endColumn":82},{"ruleId":"140","severity":1,"message":"141","line":198,"column":53,"nodeType":"142","endLine":198,"endColumn":116},{"ruleId":"132","severity":1,"message":"151","line":18,"column":8,"nodeType":"134","endLine":18,"endColumn":10,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"153","line":6,"column":9,"nodeType":"130","messageId":"131","endLine":6,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":43,"column":27,"nodeType":"156","messageId":"157","endLine":43,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":1,"column":1,"nodeType":"160","messageId":"161","endLine":1,"endColumn":14,"fix":"162"},{"ruleId":"128","severity":1,"message":"137","line":12,"column":11,"nodeType":"130","messageId":"131","endLine":12,"endColumn":16},{"ruleId":"132","severity":1,"message":"163","line":18,"column":6,"nodeType":"134","endLine":18,"endColumn":8,"suggestions":"164"},{"ruleId":"145","severity":1,"message":"146","line":74,"column":9,"nodeType":"142","endLine":74,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":82,"column":7,"nodeType":"142","endLine":82,"endColumn":100},{"ruleId":"145","severity":1,"message":"146","line":119,"column":13,"nodeType":"142","endLine":119,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":142,"column":17,"nodeType":"142","endLine":142,"endColumn":71},{"ruleId":"165","severity":1,"message":"166","line":14,"column":94,"nodeType":"167","messageId":"168","endLine":14,"endColumn":114},{"ruleId":"169","severity":1,"message":"170","line":15,"column":33,"nodeType":"142","endLine":15,"endColumn":133},{"ruleId":"128","severity":1,"message":"171","line":15,"column":9,"nodeType":"130","messageId":"131","endLine":15,"endColumn":13},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'GoogleAuthProvider' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProductByID' and 'refreshToken'. Either include them or remove the dependency array.",["173"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.",["174"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'getProducts' and 'refreshToken'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'getUserByID' and 'refreshToken'. Either include them or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'getUsers' and 'refreshToken'. Either include them or remove the dependency array.",["177"],"'navigate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"178","text":"179"},"React Hook useEffect has missing dependencies: 'Me' and 'refreshToken'. Either include them or remove the dependency array.",["180"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'auth' is assigned a value but never used.",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"181","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},[0,13],"",{"desc":"192","fix":"193"},"Update the dependencies array to be: [refreshToken]",{"range":"194","text":"195"},"Update the dependencies array to be: [getProductByID, refreshToken]",{"range":"196","text":"197"},{"range":"198","text":"195"},"Update the dependencies array to be: [getProducts, refreshToken]",{"range":"199","text":"200"},"Update the dependencies array to be: [getUserByID, refreshToken]",{"range":"201","text":"202"},"Update the dependencies array to be: [getUsers, refreshToken]",{"range":"203","text":"204"},"Update the dependencies array to be: [Me, refreshToken]",{"range":"205","text":"206"},[429,431],"[refreshToken]",[707,709],"[getProductByID, refreshToken]",[641,643],[535,537],"[getProducts, refreshToken]",[793,795],"[getUserByID, refreshToken]",[523,525],"[getUsers, refreshToken]",[462,464],"[Me, refreshToken]"]